{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar UnityLoaderService_1 = __importDefault(require(\"../services/UnityLoaderService\"));\n\nrequire(\"../Types\");\n\nvar Unity =\n/** @class */\nfunction (_super) {\n  __extends(Unity, _super);\n  /**\n   * Initialized the component.\n   * @param {IUnityProps} props\n   */\n\n\n  function Unity(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * The component state.\n     * @type {IUnityState}\n     * @public\n     */\n\n\n    _this.state = {};\n    _this.unityLoaderService = new UnityLoaderService_1.default();\n    _this.onWindowResizeBinding = _this.onWindowResize.bind(_this);\n    _this.unityContent = _this.props.unityContent;\n\n    _this.unityContent.setComponentInstance(_this);\n\n    return _this;\n  }\n  /**\n   * An event that is triggered by the Unity player. This tracks\n   * the loading progression of the player. It will send '1' when\n   * the loading is completed.\n   * @param {UnityInstance} unityInstance\n   * @param {number} progression\n   * @private\n   */\n\n\n  Unity.prototype.onProgress = function (unityInstance, progression) {\n    this.unityContent.triggerUnityEvent(\"progress\", progression);\n    if (progression === 1) this.unityContent.triggerUnityEvent(\"loaded\");\n  };\n  /**\n   * When the window is resized.\n   */\n\n\n  Unity.prototype.onWindowResize = function () {\n    if (this.unityContent.unityConfig.adjustOnWindowResize === true) this.adjustCanvasToContainer();\n  };\n  /**\n   * Since the Unity canvas itself does not respond to the resizing\n   * of it's container we have to manually do this. A width and height\n   * of 100% does not seem to work, so we have to fetch it's parent's\n   * size to adject the canvas.\n   * @private\n   */\n\n\n  Unity.prototype.adjustCanvasToContainer = function () {\n    var _width = this.htmlElement.offsetWidth;\n    var _height = this.htmlElement.offsetHeight;\n    var _canvas = this.htmlElement.getElementsByTagName(\"canvas\")[0];\n\n    if (_canvas !== null) {\n      if (_canvas.height !== _height) {\n        _canvas.height = _height;\n      }\n\n      if (_canvas.width !== _width) {\n        _canvas.width = _width;\n      }\n    }\n  };\n  /**\n   * Initialzied the Unity player when the component is mounted.\n   * @public\n   */\n\n\n  Unity.prototype.componentDidMount = function () {\n    var _this = this;\n\n    window.addEventListener(\"resize\", this.onWindowResizeBinding); // prettier-ignore\n\n    this.unityLoaderService.append(this.props.unityContent.unityLoaderJsPath, function () {\n      _this.unityContent.setUnityInstance(UnityLoader.instantiate(\"__ReactUnityWebGL_\" + _this.props.unityContent.uniqueID + \"__\", _this.props.unityContent.buildJsonPath, {\n        onProgress: _this.onProgress.bind(_this),\n        Module: _this.props.unityContent.unityConfig.modules,\n        width: \"100%\",\n        height: \"100%\"\n      }));\n    });\n  };\n  /**\n   * Will remove event listeners and clean up systems when the\n   * component is about to unmount.\n   * @public\n   */\n\n\n  Unity.prototype.componentWillUnmount = function () {\n    window.removeEventListener(\"resize\", this.onWindowResizeBinding);\n  };\n  /**\n   * Renders the unity wrapper and player.\n   * @returns {React.ReactNode} element\n   * @public\n   */\n\n\n  Unity.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      className: this.props.className || \"\",\n      ref: function ref(_ref) {\n        return _this.htmlElement = _ref;\n      },\n      id: \"__ReactUnityWebGL_\" + this.props.unityContent.uniqueID + \"__\",\n      style: {\n        width: this.props.width || \"800px\",\n        height: this.props.height || \"600px\"\n      }\n    });\n  };\n\n  return Unity;\n}(React.Component);\n\nexports.default = Unity;","map":null,"metadata":{},"sourceType":"script"}