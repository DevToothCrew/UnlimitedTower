{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UnityVersion_1 = require(\"./enums/UnityVersion\");\n\nrequire(\"./Types\");\n\nvar UnityContent =\n/** @class */\nfunction () {\n  /**\n   * Creates a new Unity content object. This object can be used\n   * @param {string} buildJsonPath the relative path to the build json file generated by Unity.\n   * @param {string} unityLoaderJsPath the relative path to the unity loader javascript file.\n   * @param {IUnityConfig} unityConfig the Unity configuration that will be used to start the player.\n   */\n  function UnityContent(buildJsonPath, unityLoaderJsPath, unityConfig) {\n    var _unityConfig = unityConfig || {};\n\n    this.buildJsonPath = buildJsonPath;\n    this.unityLoaderJsPath = unityLoaderJsPath;\n    this.uniqueID = ++UnityContent.uniqueID;\n    this.unityEvents = [];\n    this.unityConfig = {\n      modules: _unityConfig.modules || {},\n      unityVersion: _unityConfig.unityVersion || UnityVersion_1.UnityVersion.UNITY_2018,\n      adjustOnWindowResize: _unityConfig.adjustOnWindowResize,\n      id: _unityConfig.id || \"nill\"\n    };\n  }\n  /**\n   * Binds a unity component to this content.\n   * @param unityComponentInstance the unity component that will be binded to this content.\n   * @public\n   */\n\n\n  UnityContent.prototype.setComponentInstance = function (unityComponentInstance) {\n    this.unityComponent = unityComponentInstance;\n  };\n  /**\n   * Binds a unity player to this content.\n   * @param unityPlayerInstance the unity component that will be binded to this content.\n   * @public\n   */\n\n\n  UnityContent.prototype.setUnityInstance = function (unityInstance) {\n    this.unityInstance = unityInstance;\n  };\n  /**\n   * Sets the unity players fullscreen mode.\n   * @param {boolean} fullscreen\n   * @public\n   */\n\n\n  UnityContent.prototype.setFullscreen = function (fullscreen) {\n    if (this.unityInstance != null) {\n      this.unityInstance.SetFullscreen(fullscreen === true ? 1 : 0);\n    }\n  };\n  /**\n   * Sends an event to the Unity player that will trigger a function.\n   * @param {string} gameObjectName the name of the game object in your Unity scene.\n   * @param {string} methodName the name of the public method on the game object.\n   * @param {any} parameter an optional parameter to pass along to the method.\n   * @public\n   */\n\n\n  UnityContent.prototype.send = function (gameObjectName, methodName, parameter) {\n    if (this.unityInstance != null) {\n      if (typeof parameter === \"undefined\") {\n        this.unityInstance.SendMessage(gameObjectName, methodName);\n      } else {\n        this.unityInstance.SendMessage(gameObjectName, methodName, parameter);\n      }\n    }\n  };\n  /**\n   * Registers an event listener for the Unity player. These can be\n   * system events like when the player is initialized or loader and\n   * your custom events from Unity.\n   * @param {string} eventName the event name\n   * @param {Function} eventCallback the event function\n   * @returns {any} The Function\n   * @public\n   */\n\n\n  UnityContent.prototype.on = function (eventName, eventCallback) {\n    this.unityEvents.push({\n      eventName: eventName,\n      eventCallback: eventCallback\n    });\n    if (typeof window.ReactUnityWebGL === \"undefined\") window.ReactUnityWebGL = {};\n\n    window.ReactUnityWebGL[eventName] = function (parameter) {\n      return eventCallback(parameter);\n    };\n  };\n  /**\n   * Triggers an event that has been registered by the on\n   * function.\n   * @param {string} eventName the event name\n   * @param {Function} eventValue the event value\n   * @public\n   */\n\n\n  UnityContent.prototype.triggerUnityEvent = function (eventName, eventValue) {\n    for (var _i = 0; _i < this.unityEvents.length; _i++) {\n      if (this.unityEvents[_i].eventName === eventName) this.unityEvents[_i].eventCallback(eventValue);\n    }\n  };\n  /**\n   * the statis unique ID keeps track of the\n   * unique ID's made by other instances.\n   * @type {number}\n   * @static\n   * @public\n   */\n\n\n  UnityContent.uniqueID = 0;\n  return UnityContent;\n}();\n\nexports.default = UnityContent;","map":null,"metadata":{},"sourceType":"script"}