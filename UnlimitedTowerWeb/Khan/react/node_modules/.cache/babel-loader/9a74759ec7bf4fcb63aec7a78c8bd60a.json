{"ast":null,"code":"import _classCallCheck from \"/home/ydw/react-test-v4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ydw/react-test-v4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ydw/react-test-v4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ydw/react-test-v4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ydw/react-test-v4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ydw/react-test-v4/src/App.js\";\nimport React, { Component } from 'react';\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\nimport './App.css';\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nScatterJS.plugins(new ScatterEOS());\nvar network = {\n  blockchain: 'eos',\n  protocol: 'https',\n  host: 'jungle2.cryptolions.io',\n  port: 443,\n  chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.unityContent = new UnityContent(\"http://192.168.219.104:3000/Build/ydw.json\", \"http://192.168.219.104:3000/Build/UnityLoader.js\");\n\n    _this.unityContent.on(\"SignUp\", function () {\n      ScatterJS.scatter.connect('My-App').then(function (connected) {\n        if (!connected) return false;\n        var scatter = ScatterJS.scatter;\n        var requiredFields = {\n          accounts: [network]\n        };\n        scatter.getIdentity(requiredFields).then(function () {\n          var account = scatter.identity.accounts.find(function (x) {\n            return x.blockchain === 'eos';\n          });\n          var eosOptions = {\n            expireInSeconds: 60\n          };\n          var eos = scatter.eos(network, Eos, eosOptions); //   const transactionOptions = { authorization:[`${account.name}@${account.authority}`] };\n          // transfer  \n\n          /*\n          eos.transfer(account.name, 'siberiatiger', '1.0000 EOS', 'memo', transactionOptions)\n          .then(trx => {\n              console.log(`Transaction ID: ${trx.transaction_id}`);\n            })\n          .catch(error => {\n              console.error(error);\n            });\n            */\n\n          /*\n           var data = {\n             auth : account.authority,\n             user : account.name\n           };\n          */\n\n          eos.transaction({\n            actions: [{\n              account: 'canietest444',\n              name: 'signup',\n              authorization: [{\n                actor: account.name,\n                permission: account.authority\n              }],\n              data: {\n                _user: account.name\n              }\n            }]\n          });\n        });\n      });\n    });\n\n    _this.unityContent.on(\"Gacha\", function () {\n      console.log(\"Good\");\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Unity, {\n        unityContent: this.unityContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ydw/react-test-v4/src/App.js"],"names":["React","Component","ScatterJS","ScatterEOS","Eos","Unity","UnityContent","plugins","network","blockchain","protocol","host","port","chainId","App","props","unityContent","on","scatter","connect","then","connected","requiredFields","accounts","getIdentity","account","identity","find","x","eosOptions","expireInSeconds","eos","transaction","actions","name","authorization","actor","permission","authority","data","_user","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,mBAApC;AAEAJ,SAAS,CAACK,OAAV,CAAmB,IAAIJ,UAAJ,EAAnB;AACA,IAAMK,OAAO,GAAG;AACZC,EAAAA,UAAU,EAAC,KADC;AAEZC,EAAAA,QAAQ,EAAC,OAFG;AAGZC,EAAAA,IAAI,EAAC,wBAHO;AAIZC,EAAAA,IAAI,EAAC,GAJO;AAKZC,EAAAA,OAAO,EAAC;AALI,CAAhB;;IAQMC,G;;;;;AAEF,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AAEA,UAAKC,YAAL,GAAoB,IAAIV,YAAJ,CAClB,4CADkB,EAElB,kDAFkB,CAApB;;AAKA,UAAKU,YAAL,CAAkBC,EAAlB,CAAqB,QAArB,EAA+B,YAAU;AACrCf,MAAAA,SAAS,CAACgB,OAAV,CAAkBC,OAAlB,CAA0B,QAA1B,EAAoCC,IAApC,CAAyC,UAAAC,SAAS,EAAI;AAClD,YAAG,CAACA,SAAJ,EAAe,OAAO,KAAP;AACf,YAAMH,OAAO,GAAGhB,SAAS,CAACgB,OAA1B;AACA,YAAMI,cAAc,GAAG;AAAEC,UAAAA,QAAQ,EAAC,CAACf,OAAD;AAAX,SAAvB;AACAU,QAAAA,OAAO,CAACM,WAAR,CAAoBF,cAApB,EAAoCF,IAApC,CAAyC,YAAM;AAC3C,cAAMK,OAAO,GAAGP,OAAO,CAACQ,QAAR,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACnB,UAAF,KAAiB,KAArB;AAAA,WAAhC,CAAhB;AACA,cAAMoB,UAAU,GAAG;AAAEC,YAAAA,eAAe,EAAC;AAAlB,WAAnB;AACA,cAAMC,GAAG,GAAGb,OAAO,CAACa,GAAR,CAAYvB,OAAZ,EAAqBJ,GAArB,EAA0ByB,UAA1B,CAAZ,CAH2C,CAI9C;AACG;;AACA;;;;;;;;;;AASC;;;;;;;AAMCE,UAAAA,GAAG,CAACC,WAAJ,CAAgB;AACdC,YAAAA,OAAO,EAAC,CACN;AACER,cAAAA,OAAO,EAAG,cADZ;AAEES,cAAAA,IAAI,EAAG,QAFT;AAGEC,cAAAA,aAAa,EAAC,CAAC;AACbC,gBAAAA,KAAK,EAAGX,OAAO,CAACS,IADH;AAEbG,gBAAAA,UAAU,EAAGZ,OAAO,CAACa;AAFR,eAAD,CAHhB;AAOEC,cAAAA,IAAI,EAAG;AACLC,gBAAAA,KAAK,EAAGf,OAAO,CAACS;AADX;AAPT,aADM;AADM,WAAhB;AAeH,SApCH;AAqCH,OAzCD;AA0CH,KA3CD;;AA6CA,UAAKlB,YAAL,CAAkBC,EAAlB,CAAqB,OAArB,EAA8B,YAAU;AACpCwB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAFD;;AArDc;AAwDjB;;;;6BAEQ;AACL,aAAO,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAE,KAAK1B,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EA9DahB,KAAK,CAACC,S;;AAiExB,eAAea,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\nimport './App.css';\nimport Unity, { UnityContent } from \"react-unity-webgl\";\n\nScatterJS.plugins( new ScatterEOS() );\nconst network = {\n    blockchain:'eos',\n    protocol:'https',\n    host:'jungle2.cryptolions.io',\n    port:443,\n    chainId:'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'\n}\n\nclass App extends React.Component {\n\n    constructor(props){\n        super(props);\n    \n        this.unityContent = new UnityContent(\n          \"http://192.168.219.104:3000/Build/ydw.json\",\n          \"http://192.168.219.104:3000/Build/UnityLoader.js\"\n        ); \n\n        this.unityContent.on(\"SignUp\", function(){\n            ScatterJS.scatter.connect('My-App').then(connected => {\n                if(!connected) return false;\n                const scatter = ScatterJS.scatter;\n                const requiredFields = { accounts:[network] };\n                scatter.getIdentity(requiredFields).then(() => {\n                    const account = scatter.identity.accounts.find(x => x.blockchain === 'eos');\n                    const eosOptions = { expireInSeconds:60 };\n                    const eos = scatter.eos(network, Eos, eosOptions);\n                 //   const transactionOptions = { authorization:[`${account.name}@${account.authority}`] };\n                    // transfer  \n                    /*\n                    eos.transfer(account.name, 'siberiatiger', '1.0000 EOS', 'memo', transactionOptions)\n                    .then(trx => {\n                        console.log(`Transaction ID: ${trx.transaction_id}`);\n                      })\n                    .catch(error => {\n                        console.error(error);\n                      });\n                      */          \n                     /*\n                      var data = {\n                        auth : account.authority,\n                        user : account.name\n                      };\n        */\n                      eos.transaction({\n                        actions:[\n                          {\n                            account : 'canietest444',\n                            name : 'signup',\n                            authorization:[{\n                              actor : account.name,\n                              permission : account.authority\n                            }],\n                            data : {\n                              _user : account.name\n                            }\n                          }                  \n                        ]\n                      });  \n                  });\n            });\n        });\n\n        this.unityContent.on(\"Gacha\", function(){\n            console.log(\"Good\");\n        });\n    }\n\n    render() {\n        return <Unity unityContent={this.unityContent} />;\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}